---
- name: Install gluster
  hosts: "{{ _gluster_hostgroup_name }}"
  become: true
  vars_files:
    - ../vars/main.yml
  tasks:
    - name: Set gluster facts
      ansible.builtin.set_fact:
        _map_flatten: "nephelaiio.plugins.map_flatten"
        _select_attrs: "nephelaiio.plugins.select_attributes"
        _alias_keys: "nephelaiio.plugins.alias_keys"

    - name: Create brick paths
      ansible.builtin.file:
        path: "{{ item.brick }}"
        state: directory
      loop_control:
        label: "{{ item.brick }}"
      loop: "{{ _gluster_volumes }}"

    - name: Install gluster server
      ansible.builtin.package:
        name: "{{ gluster_package_name }}"

    - name: Manage gluster service
      ansible.builtin.systemd:
        name: "{{ gluster_service_name }}"
        state: started
        enabled: true

    - name: Manage gluster brick tasks
      run_once: true
      block:
        - name: Manage gluster peer members
          gluster.gluster.gluster_peer:
            state: present
            nodes: "{{ gluster_members }}"
          changed_when: false

        - name: Get gluster volume status
          gluster.gluster.gluster_heal_info:
            name: "{{ item.name }}"
          register: gluster_volume_status
          ignore_errors: true
          loop_control:
            label: "{{ item.name }}"
          loop: "{{ _gluster_volumes }}"

        - name: Create gluster volumes
          gluster.gluster.gluster_volume:
            state: present
            name: "{{ _volume }}"
            bricks: "{{ _brick }}"
            cluster: "{{ gluster_members }}"
            force: true
            replicas: "{{ gluster_members | length }}"
            start_on_create: true
          when: item.failed
          ignore_errors: true
          vars:
            _brick: "{{ item.brick }}"
            _volume: "{{ item.name }}"
            _failed_volumes: "{{ gluster_volume_status.results | selectattr('failed', 'defined') | selectattr('failed') }}"
            _volumes_list: "{{ _failed_volumes | map(_map_flatten) | map(_alias_keys, _aliases) }}"
            _aliases:
              item.name: name
              item.brick: brick
            _attributes:
              - name
              - brick
              - failed
            _volumes: "{{ _volumes_list | map(_select_attrs, _attributes) }}"
          loop_control:
            label: "{{ _volume }}"
          loop: "{{ _volumes }}"

        - name: Prune stale gluster peer members
          ansible.builtin.shell: gluster peer detach {{ item }}
          args:
            chdir: "/usr/sbin/"
          changed_when: false
          loop: "{{ _gluster_member_del }}"

    - name: Create mount directory
      ansible.builtin.file:
        path: "{{ item.mount }}"
        state: directory
      loop_control:
        label: "{{ item.name }} - {{ item.mount }}"
      loop: "{{ _gluster_volumes }}"

    - name: Mount gluster source volume
      ansible.builtin.mount:
        src: "localhost:/{{ item.name }}"
        path: "{{ item.mount }}"
        fstype: glusterfs
        opts: defaults
        state: mounted
      loop_control:
        label: "{{ item.name }} - {{ item.mount }}"
      loop: "{{ _gluster_volumes }}"

    - name: Manage subdirectories
      ansible.builtin.file:
        dest: "{{ volume.mount }}/{{ path }}"
        owner: "{{ _gluster_owner_user }}"
        group: "{{ _gluster_owner_group }}"
        mode: "{{ _gluster_directory_mode | int }}"
        state: directory
      vars:
        volume: "{{ item.0 }}"
        path: "{{ item.1 }}"
      loop_control:
        label: "{{ volume.mount }} - {{ path }}"
      loop: "{{ _gluster_volumes | subelements('paths', skip_missing='yes') }}"
      run_once: true
