---
- name: Install gluster
  hosts: "{{ _gluster_server_hostgroup_name }}"
  become: true
  any_errors_fatal: true
  vars:
    _gluster_groupset: "{{ gluster_groupset | default('cluster') }}"
    _gluster_server_prefix: "{{ gluster_server_prefix | default('gluster_server') }}"
    _gluster_name: "{{ _gluster_server_prefix }}_{{ _gluster_groupset }}"
    _gluster_server_replica_groupset: "{{ gluster_server_replica_groupset | default('gluster_server_replica') }}"
    _gluster_server_primary_groupset: "{{ gluster_server_primary_groupset | default('gluster_server_primary') }}"
  vars_files:
    - ../vars/main.yml
  tasks:
    - name: Install gluster server
      ansible.builtin.package:
        name: "{{ gluster_package_name }}"

    - name: Manage gluster service
      ansible.builtin.systemd:
        name: "{{ gluster_service_name }}"
        state: started
        enabled: true

    - name: Manage gluster peer members
      gluster.gluster.gluster_peer:
        state: present
        nodes: "{{ _targets }}"
      vars:
        _targets: "{{ gluster_target_members }}"
        _hosts: "{{ groups[_gluster_name] }}"
      changed_when: false
      when: (inventory_hostname == (_hosts | first))

    - name: Wait for gluster peers to be connected
      ansible.builtin.shell: gluster pool list | awk '{print $2}'
      args:
        chdir: "/usr/sbin/"
      vars:
        _status: "{{ _member_query }}"
        _members_output: "{{ _status.stdout_lines | reject('equalto', 'Hostname') }}"
        _existing_members: "{{ _members_output | map('regex_replace', 'localhost', inventory_hostname) }}"
      register: _member_query
      retries: "{{ _gluster_retries }}"
      delay: "{{ _gluster_delay }}"
      until: gluster_target_members | select('in', _existing_members)
      changed_when: false
      tags: skip_ansible_lint
