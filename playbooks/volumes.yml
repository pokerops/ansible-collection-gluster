---
- name: Manage gluster volumes
  hosts: "{{ _gluster_server_hostgroup_name }}"
  become: true
  any_errors_fatal: true
  vars:
    _gluster_groupset: "{{ gluster_groupset | default('cluster') }}"
    _gluster_prefix: "{{ gluster_prefix | default('gluster') }}"
    _gluster_name: "{{ _gluster_prefix }}_{{ _gluster_groupset }}"
    _gluster_server_replica_groupset: "{{ gluster_server_replica_groupset | default('gluster_server_replica') }}"
    _gluster_server_primary_groupset: "{{ gluster_server_primary_groupset | default('gluster_server_primary') }}"
  vars_files:
    - ../vars/main.yml
  tasks:
    - name: Set volume facts
      ansible.builtin.set_fact:
        __gluster_volumes: "{{ _hosts | ternary(_meta_volumes, _volumes) }}"
      vars:
        _volumes: "{{ _gluster_volumes }}"
        _meta_volumes: "{{ [gluster_meta_volume] + _volumes }}"
        _hosts: "{{ inventory_hostname in groups[_gluster_server_primary_groupset] }}"

    - name: Create brick paths
      ansible.builtin.file:
        path: "{{ item.brick }}"
        state: directory
      loop_control:
        label: "{{ item.brick }}"
      loop: "{{ __gluster_volumes }}"

    - name: Manage gluster volume tasks
      when: (inventory_hostname == (gluster_target_members | first))
      block:
        - name: Manage gluster volumes
          gluster.gluster.gluster_volume:
            state: present
            name: "{{ _volume }}"
            bricks: "{{ _brick }}"
            cluster: "{{ gluster_target_members }}"
            force: true
            replicas: "{{ gluster_target_members | length }}"
            start_on_create: true
            options: "{{ item.options | default(omit) }}"
          vars:
            _brick: "{{ item.brick }}"
            _volume: "{{ item.name }}"
          loop_control:
            label: "{{ _volume }}"
          loop: "{{ __gluster_volumes }}"

        - name: Prune stale gluster peer members
          gluster.gluster.gluster_peer:
            state: absent
            nodes: "{{ _gluster_member_del }}"
            force: true
          changed_when: false
          when: _gluster_member_del | length > 0

    - name: Create mount directory
      ansible.builtin.file:
        path: "{{ item.mount }}"
        state: directory
      loop_control:
        label: "{{ item.name }} - {{ item.mount }}"
      loop: "{{ __gluster_volumes }}"

    - name: Mount gluster source volume
      ansible.posix.mount:
        src: "localhost:/{{ item.name }}"
        path: "{{ item.mount }}"
        fstype: glusterfs
        opts: "{{ _options }}"
        state: mounted
      vars:
        _replicas: "{{ groups[_gluster_server_replica_groupset] | default([]) }}"
        _option_default: "{{ item.opts | default('defaults') }}"
        _options: "{{ 'ro' if inventory_hostname in _replicas else _option_default }}"
      loop_control:
        label: "{{ item.name }} - {{ item.mount }}"
      loop: "{{ __gluster_volumes }}"

    - name: Manage subdirectories
      ansible.builtin.file:
        dest: "{{ volume.mount }}/{{ path }}"
        owner: "{{ _gluster_owner_user }}"
        group: "{{ _gluster_owner_group }}"
        mode: "{{ _gluster_directory_mode | int }}"
        state: directory
      vars:
        volume: "{{ item.0 }}"
        path: "{{ item.1 }}"
      loop_control:
        label: "{{ volume.mount }} - {{ path }}"
      loop: "{{ __gluster_volumes | subelements('paths', skip_missing='yes') }}"
      when: inventory_hostname in groups[_gluster_server_primary_groupset]
