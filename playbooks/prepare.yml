---
- name: Prepare gluster members
  hosts: "{{ _gluster_hostgroup_name }}"
  become: true
  vars_files:
    - ../vars/main.yml
  tasks:
    - name: Verify gluster variables
      ansible.builtin.assert:
        that:
          - _gluster_volumes | length > 0

    - name: Set gluster hosts fact
      ansible.builtin.set_fact:
        gluster_members: "{{ _gluster_members }}"
      vars:
        _map_format: "nephelaiio.plugins.map_format"
        _gluster_hosts: "{{ groups[_gluster_hostgroup_name] }}"
        _gluster_addrs: "{{ _gluster_hosts | map('extract', hostvars, gluster_address_attrs) }}"
        _gluster_members: "{{ _gluster_hosts if _gluster_hosts_manage else _gluster_addrs }}"

    - name: Gather service facts
      ansible.builtin.service_facts:

    - name: End play for offline hosts
      ansible.builtin.meta: end_host
      when:
        - gluster_service_name in services
        - services[gluster_service_name].state | lower != 'running'

    - name: Add host entries for cluster members
      ansible.builtin.lineinfile:
        path: /etc/hosts
        regexp: ".*{{ item }}.*"
        line: "{{ _member_address }} {{ _fqdn }} {{ _hostname }}"
      vars:
        _member_address: "{{ hostvars[item]['ansible_default_ipv4']['address'] }}"
        _fqdn: "{{ hostvars[item]['ansible_fqdn'] }}"
        _hostname: "{{ hostvars[item]['ansible_hostname'] }}"
      loop: "{{ gluster_members }}"

    - name: Query gluster node membership
      when: gluster_service_name in services
      block:
        - name: Query pool list
          ansible.builtin.command: "gluster pool list"
          args:
            chdir: "/usr/sbin/"
          register: _member_query
          changed_when: false

        - name: Set existing node membership fact
          ansible.builtin.set_fact:
            _gluster_existing_members: "{{ (_hosts | select('in', _existing)) + [inventory_hostname] }}"
          vars:
            _hosts: "{{ gluster_members }}"
            _existing: "{{ _member_query.stdout_lines | map('split', '\t') | flatten }}"
          delegate_to: localhost
          delegate_facts: true

    - name: Set gluster members fact
      ansible.builtin.set_fact:
        _gluster_existing_members: "{{ _existing }}"
        _gluster_aliens: "{{ _aliens }}"
        _gluster_member_del: "{{ _delete }}"
      vars:
        _hosts: "{{ gluster_members }}"
        _existing: "{{ hostvars['localhost']['_gluster_existing_members'] | default([]) }}"
        _aliens: "{{ _hosts | reject('in', _existing) }}"
        _delete: "{{ _existing | reject('in', _hosts) }}"

    - name: Debug gluster existing members
      ansible.builtin.debug:
        msg: "Existing gluster members: [{{ _gluster_existing_members | join(',') }}]"

    - name: Debug gluster members additions
      ansible.builtin.debug:
        msg: "New gluster members: [{{ _gluster_aliens | join(',') }}]"

    - name: Debug gluster member removals
      ansible.builtin.debug:
        msg: "Removing gluster members: [{{ _gluster_member_del | join(',') }}]"
