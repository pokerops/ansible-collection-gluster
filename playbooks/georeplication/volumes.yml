---
- name: Run Gluster facts
  ansible.builtin.import_playbook: pokerops.gluster.facts

- name: Get geo replication volume facts
  hosts: "{{ _gluster_server_hostgroup_name }}"
  gather_facts: false
  vars:
    _gluster_server_replica_groupset: "{{ gluster_server_replica_groupset | default('gluster_server_replica') }}"
  vars_files:
    - ../../vars/main.yml
  tasks:
    - name: End play when gluster georeplication is not required
      ansible.builtin.meta: end_play
      vars:
        _replicas: "{{ groups[_gluster_server_replica_groupset] | default([]) }}"
      when: _replicas | length == 0

    - name: Set gluster replica volumes
      ansible.builtin.set_fact:
        _gluster_replica_volumes: "{{ _volumes_list }}"
      vars:
        _replica_state_default: "present"
        _volumes_num: "{{ _volumes | length }}"
        _replica_state_default_map: "{{ [_replica_state_default] * _volumes_num | int }}"
        _replica_state_default_dict: "{{ _replica_state_default_map | map(_to_dict, 'state') }}"
        _replica_member: "{{ groups[_gluster_server_replica_groupset] | sort | first }}"
        _volumes: "{{ _gluster_volumes | sort(attribute='name') }}"
        _volume_names: "{{ _volumes | map(attribute='name') }}"
        _volume_format: "{{ _volume_names | map(_map_format, _replica_member + '::%s') }}"
        _volume_dict: "{{ _volume_format | map(_to_dict, 'replica_name') }}"
        _volumes_combine: "{{ _volumes | zip(_volume_dict) | map('combine') }}"
        _volumes_list: "{{ _replica_state_default_dict | zip(_volumes_combine) | map('combine') }}"
