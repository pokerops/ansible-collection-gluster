---
- name: Group gluster server georeplication slaves
  hosts: "{{ gluster_server_prefix | default('gluster_server') }}_{{ gluster_server_groupset | default('cluster') }}_slave_all"
  gather_facts: false
  vars:
    _gluster_server_groupset: "{{ gluster_server_groupset | default('cluster') }}"
    _gluster_server_prefix: "{{ gluster_server_prefix | default('gluster_server') }}"
    _gluster_name: "{{ _gluster_server_prefix }}_{{ _gluster_server_groupset }}"
  vars_files:
    - ../../vars/main.yml
  tasks:
    - name: End play when gluster georeplication is not required
      ansible.builtin.meta: end_play
      vars:
        _replicas: "{{ _gluster_server_slaves_all | default([]) }}"
      when: _replicas | length == 0

    - name: End play for unrequired gluster geo replication nodes
      ansible.builtin.meta: end_host
      when: (not inventory_hostname == (gluster_target_members | first))

    - name: Group gluster server slave target members
      ansible.builtin.group_by:
        key: "{{ _gluster_name }}_slave_targets"
      changed_when: false

    - name: Set gluster slave target fact
      ansible.builtin.set_fact:
        _gluster_server_slave_targets: "{{ groups[_targets] }}"
      vars:
        _targets: "{{ _gluster_name }}_slave_targets"
      delegate_to: localhost
      delegate_facts: true

- name: Get geo replication volume facts
  hosts: "{{ _gluster_server_hostgroup_name }}"
  gather_facts: false
  vars_files:
    - ../../vars/main.yml
  tasks:
    - name: End play when gluster georeplication is not required
      ansible.builtin.meta: end_play
      vars:
        _replicas: "{{ _gluster_server_slaves_all | default([]) }}"
      when: _replicas | length == 0

    - name: Set gluster geo replication volume facts
      ansible.builtin.set_fact:
        _gluster_server_slave_targets: "{{ _targets }}"
        _gluster_target_volumes: []
        _gluster_volumes_filter: "{{ _gluster_volumes | rejectattr('name', 'equalto', _meta_volume) }}"
      vars:
        _meta_volume: "{{ gluster_meta_volume.name }}"
        _targets: "{{ hostvars['localhost']['_gluster_server_slave_targets'] }}"

    - name: Set gluster geo replication volume facts
      ansible.builtin.set_fact:
        _gluster_target_volumes: "{{ _gluster_target_volumes + [_volume | combine({'replica_name': _slave})] }}"
      vars:
        _volume: "{{ item.0 }}"
        _slave: "{{ item.1 }}::{{ _volume }}"
      loop_control:
        label: "Volume: {{ _volume.name }} - Replica: {{ _slave }}"
      loop: "{{ _gluster_volumes_filter | product(_gluster_server_slave_targets) }}"

    - debug:
        var: _gluster_target_volumes
